PathFinder - Документация

Описание проекта

PathFinder — это программное решение для поиска кратчайшего пути в лабиринте с различными условиями проходимости. В проекте реализован алгоритм поиска в ширину (BFS), позволяющий находить оптимальный маршрут с учетом стоимости передвижения по разным типам клеток. Приложение разработано с использованием Flask и взаимодействует с базой данных SQLite.

Последовательность действий для получения результата

1. Установка и запуск

1.1. Создайте виртуальное окружение:

python -m venv env

1.2. Активируйте виртуальное окружение:

Windows:

env\Scripts\activate

macOS/Linux:

source env/bin/activate

1.3. Установите зависимости:

pip install -r requirements.txt

1.4. Запустите приложение:

python src/app.py

1.5. Для инициализации базы данных выполните:

python db/init_db.py

Используемые технологии и инструменты

Python – язык программирования (https://www.python.org/)

Flask – веб-фреймворк для Python (https://flask.palletsprojects.com/)

SQLite – встроенная база данных (https://www.sqlite.org/)

Алгоритм поиска в ширину (BFS) – метод поиска кратчайшего пути (https://ru.wikipedia.org/wiki/Поиск_в_ширину)

Jest – инструмент для тестирования (https://jestjs.io/)

Git – система управления версиями (https://git-scm.com/)

GitHub/GitFlic – хостинг репозиториев (https://github.com/ и https://gitflic.ru/)

Структура проекта

db/              # Сценарии для инициализации базы данных
src/             # Исходный код приложения
requirements.txt # Зависимости Python
README.md        # Описание проекта
tests/           # Тесты

Реализованные функции

Чтение и обработка карты лабиринта из базы данных

Поиск кратчайшего пути с учетом различных типов местности

Визуализация маршрута на основе полученных данных

Взаимодействие с API для управления картами и персонажами

Поддержка пользовательских настроек и управления параметрами алгоритма

Будущие улучшения и расширения

Добавление поддержки алгоритма A* для повышения точности поиска пути

Оптимизация производительности за счет параллельных вычислений

Графический интерфейс для визуализации лабиринта и маршрутов

Интеграция с внешними картами, такими как OpenStreetMap или Google Maps

Дополнительные ресурсы

Официальная документация Flask: https://flask.palletsprojects.com/

Официальная документация Python: https://docs.python.org/3/

Официальный сайт SQLite: https://www.sqlite.org/

Вики-страница алгоритма BFS: https://ru.wikipedia.org/wiki/Поиск_в_ширину

